#!/bin/bash
#
# Shamir magic script to split data file into parts
# use: domagic <filename> (<threshold> (<shares>))
#

if [[ $# -eq 0 ]]; then
    echo "Please give to split file as parameter!"
    exit 1
fi

file=$1
threshold=${2:-"3"}
shares=${3:-"5"}

if ! [[ -f "$file" ]]; then
    echo "Could not find $file"
    exit 1
fi

echo "Splitting into ${shares}, threshold of ${threshold}"

if [ "$shares" -lt "$threshold" ]; then
    echo "Require to at least as many shares as threshold"
    exit 1
fi


mkdir -p .shares

echo "Performing split to $file"

rm -rf .shares/*
cat "$file" | base64 | ( id=0; while read line; do echo "$line" | ssss-split -Qq -t"${threshold}" -n"${shares}" > .shares/$id; id=$(($id+1)); done)


echo "combining all shares on per host basis"
for id in $(seq 1 "${shares}"); do
	:>"${id}_shares"
done
for f in $(ls .shares/* | sort -V); do
	fdata=$(cat $f)
	for id in $(seq 1 "${shares}"); do
		#for each of the 5 hosts get the keys
		echo "$fdata" | grep "^${id}-" >> "${id}_shares"
	done
done
unset fdata

echo "Comparing original with testing for final end"
b64="$file"_shamired_base64
:>"$b64"
# for testing the result files
for f in $(ls .shares/* | sort -V); do
       	(cat $f | tail -n${threshold}) | ssss-combine -t${threshold} -Qq;
done 2>> "$b64"
base64 -d "$b64" > "$b64".fin

diff "$file" "$b64".fin 2>/dev/null >/dev/null
rm "$b64" "$b64".fin
rm -rf .shares

echo "result of diff was:   $?  (should be 0)   - thx for using magic"
echo "X_shares can be copied to remote servers and recombined using premount init script"
